define("discourse/plugins/discourse-policy/discourse/components/policy-builder-form",["exports","@ember/component"],(function(e,t){"use strict"
function o(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
class i extends t.default{constructor(){super(...arguments),o(this,"tagName",null),o(this,"policy",null),o(this,"onChange",null)}}e.default=i})),define("discourse/plugins/discourse-policy/discourse/components/policy-form-field",["exports","@ember/component"],(function(e,t){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
class o extends t.default{constructor(){var e,t,o
super(...arguments),o="",(t="tagName")in(e=this)?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o}}e.default=o})),define("discourse/plugins/discourse-policy/discourse/components/policy-group-input",["exports","@ember/component","@ember/object"],(function(e,t,o){"use strict"
var i,c,n
function s(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t,o,i,c){var n={}
return Object.keys(i).forEach((function(e){n[e]=i[e]})),n.enumerable=!!n.enumerable,n.configurable=!!n.configurable,("value"in n||n.initializer)&&(n.writable=!0),n=o.slice().reverse().reduce((function(o,i){return i(e,t,o)||o}),n),c&&void 0!==n.initializer&&(n.value=n.initializer?n.initializer.call(c):void 0,n.initializer=void 0),void 0===n.initializer&&(Object.defineProperty(e,t,n),n=null),n}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
let l=(i=(0,o.computed)("groups.[]"),c=(0,o.computed)("site.groups.[]"),n=class extends t.default{constructor(){super(...arguments),s(this,"tagName",null),s(this,"groups",null),s(this,"onChangeGroup",null)}get selectedGroups(){return(this.groups||"").split(",").filter(Boolean)}get availableGroups(){return(this.site.groups||[]).map((e=>{if(0!==e.id)return e.name})).filter(Boolean)}onChange(e){this.onChangeGroup&&this.onChangeGroup(e.join(","))}},r(n.prototype,"selectedGroups",[i],Object.getOwnPropertyDescriptor(n.prototype,"selectedGroups"),n.prototype),r(n.prototype,"availableGroups",[c],Object.getOwnPropertyDescriptor(n.prototype,"availableGroups"),n.prototype),r(n.prototype,"onChange",[o.action],Object.getOwnPropertyDescriptor(n.prototype,"onChange"),n.prototype),n)
e.default=l})),define("discourse/plugins/discourse-policy/discourse/components/policy-reminder-input",["exports","@ember/component","I18n"],(function(e,t,o){"use strict"
function i(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
const c=[{id:"daily",name:o.default.t("daily")},{id:"weekly",name:o.default.t("weekly")}]
class n extends t.default{constructor(){super(...arguments),i(this,"tagName",""),i(this,"reminder",null),i(this,"onChangeReminder",null),i(this,"validReminders",c)}}e.default=n})),define("discourse/plugins/discourse-policy/discourse/components/post-policy",["exports","@ember/component","@ember/object","discourse-common/lib/get-url","discourse-common/utils/decorators","discourse/lib/ajax","discourse/lib/ajax-error","discourse/lib/show-modal","javascripts/components/post-policy"],(function(e,t,o,i,c,n,s,r,l){"use strict"
var p,a,u,d,y,_,f,m,b
function v(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function g(e,t,o,i,c){var n={}
return Object.keys(i).forEach((function(e){n[e]=i[e]})),n.enumerable=!!n.enumerable,n.configurable=!!n.configurable,("value"in n||n.initializer)&&(n.writable=!0),n=o.slice().reverse().reduce((function(o,i){return i(e,t,o)||o}),n),c&&void 0!==n.initializer&&(n.value=n.initializer?n.initializer.call(c):void 0,n.initializer=void 0),void 0===n.initializer&&(Object.defineProperty(e,t,n),n=null),n}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
let h=(p=(0,o.computed)("post.policy_not_accepted_by_count","post.policy.policy_accepted_by_count"),a=(0,o.computed)("post.policy_accepted","post.policy_revoked"),u=(0,o.computed)("post.policy_accepted","post.policy_revoked"),d=(0,o.computed)("post.policy_accepted_by_count","post.policy_accepted_by.[]"),y=(0,o.computed)("post.policy_accepted_by.[]"),_=(0,o.computed)("post.policy_not_accepted_by_count","post.policy_not_accepted_by.[]"),f=(0,o.computed)("post.policy_not_accepted_by.[]"),m=(0,o.computed)("currentUser.{id,staff}","post.user_id"),b=class extends t.default{constructor(){super(...arguments),v(this,"layout",l.default),v(this,"tagName",""),v(this,"post",null),v(this,"options",null),v(this,"showNotAccepted",!1),v(this,"isLoading",!1),v(this,"policy",null)}didInsertElement(){var e,t,o
this._super(...arguments),null===(e=this.post)||void 0===e||e.setProperties({policy_accepted_by:(null===(t=this.post)||void 0===t?void 0:t.policy_accepted_by)||[],policy_not_accepted_by:(null===(o=this.post)||void 0===o?void 0:o.policy_not_accepted_by)||[]}),this.appEvents.on("policy:changed",this,"policyChanged")}willDestroyElement(){this._super(...arguments),this.appEvents.off("policy:changed",this,"policyChanged")}policyChanged(e){if(e.message.id!==this.post.id)return
const t=e.controller.get("model.postStream").findLoadedPost(e.message.id)
if(t){const e=(0,i.default)("/posts/".concat(t.id,".json"));(0,n.ajax)(e).then((e=>{this.post.setProperties({policy_can_accept:e.policy_can_accept,policy_can_revoke:e.policy_can_revoke,policy_accepted:e.policy_accepted,policy_revoked:e.policy_revoked,policy_not_accepted_by:e.policy_not_accepted_by||[],policy_not_accepted_by_count:e.policy_not_accepted_by_count,policy_accepted_by:e.policy_accepted_by||[],policy_accepted_by_count:e.policy_accepted_by_count})}))}}get policyHasUsers(){var e,t
return((null===(e=this.post)||void 0===e?void 0:e.policy_not_accepted_by_count)||0+(null===(t=this.post)||void 0===t?void 0:t.policy_accepted_by_count)||0)>0}get acceptButtonClasses(){var e,t
let o="accept btn-accept-policy"
return(null===(e=this.post)||void 0===e||!e.policy_accepted||null!==(t=this.post)&&void 0!==t&&t.policy_revoked)&&(o+=" btn-primary"),o}get revokeButtonClasses(){var e,t
let o="revoke btn-revoke-policy"
return(null===(e=this.post)||void 0===e||!e.policy_revoked||null!==(t=this.post)&&void 0!==t&&t.policy_accepted)&&(o+=" btn-danger"),o}get remainingAcceptedUsers(){var e,t
return((null===(e=this.post)||void 0===e?void 0:e.policy_accepted_by_count)||0)-((null===(t=this.post)||void 0===t?void 0:t.policy_accepted_by)||[]).length}get acceptedUsers(){var e
return(null===(e=this.post)||void 0===e?void 0:e.policy_accepted_by)||[]}get remainingNotAcceptedUsers(){var e,t
return((null===(e=this.post)||void 0===e?void 0:e.policy_not_accepted_by_count)||0)-((null===(t=this.post)||void 0===t?void 0:t.policy_not_accepted_by)||[]).length}get notAcceptedUsers(){return this.post.policy_not_accepted_by||[]}get canManagePolicy(){var e
return this.currentUser&&(this.currentUser.staff||this.currentUser.id===(null===(e=this.post)||void 0===e?void 0:e.user_id))}revokePolicy(){this.post.policy_not_accepted_by.pushObject(this.currentUser),this.post.set("policy_not_accepted_by_count",this.post.policy_not_accepted_by_count+1)
const e=this.post.policy_accepted_by.findBy("id",this.currentUser.id)
e&&(this.post.policy_accepted_by.removeObject(e),this.post.set("policy_accepted_by_count",this.post.policy_accepted_by_count-1)),this.post.policy_can_accept!==this.post.policy_can_revoke&&this.post.setProperties({policy_can_accept:!0,policy_can_revoke:!1,policy_accepted:!1,policy_revoked:!0}),this._updatePolicy("unaccept",this.post.id)}acceptPolicy(){this.post.policy_accepted_by.pushObject(this.currentUser),this.post.set("policy_accepted_by_count",this.post.policy_accepted_by_count+1)
const e=this.post.policy_not_accepted_by.findBy("id",this.currentUser.id)
e&&(this.post.policy_not_accepted_by.removeObject(e),this.post.set("policy_not_accepted_by_count",this.post.policy_not_accepted_by_count-1)),this.post.policy_can_accept!==this.post.policy_can_revoke&&this.post.setProperties({policy_can_accept:!1,policy_can_revoke:!0,policy_accepted:!0,policy_revoked:!1}),this._updatePolicy("accept",this.post.id)}loadRemainingAcceptedUsers(){(0,n.ajax)((0,i.default)("/policy/accepted"),{data:{post_id:this.post.id,offset:this.post.policy_accepted_by.length}}).then((e=>{e.users.forEach((e=>{this.post.policy_accepted_by.pushObject(e)}))})).catch(s.popupAjaxError)}loadRemainingNotAcceptedUsers(){(0,n.ajax)((0,i.default)("/policy/accepted"),{data:{post_id:this.post.id,offset:this.post.policy_not_accepted_by.length}}).then((e=>{e.users.forEach((e=>{this.post.policy_not_accepted_by.pushObject(e)}))})).catch(s.popupAjaxError)}editPolicy(){(0,r.default)("policy-builder").setProperties({insertMode:!1,post:this.post,policy:this.policy})}toggleShowUsers(){this.toggleProperty("showNotAccepted")}_updatePolicy(e,t){return this.set("isLoading",!0),(0,n.ajax)((0,i.default)("/policy/".concat(e)),{type:"put",data:{post_id:t}}).catch(s.popupAjaxError).finally((()=>this.set("isLoading",!1)))}},g(b.prototype,"policyChanged",[c.bind],Object.getOwnPropertyDescriptor(b.prototype,"policyChanged"),b.prototype),g(b.prototype,"policyHasUsers",[p],Object.getOwnPropertyDescriptor(b.prototype,"policyHasUsers"),b.prototype),g(b.prototype,"acceptButtonClasses",[a],Object.getOwnPropertyDescriptor(b.prototype,"acceptButtonClasses"),b.prototype),g(b.prototype,"revokeButtonClasses",[u],Object.getOwnPropertyDescriptor(b.prototype,"revokeButtonClasses"),b.prototype),g(b.prototype,"remainingAcceptedUsers",[d],Object.getOwnPropertyDescriptor(b.prototype,"remainingAcceptedUsers"),b.prototype),g(b.prototype,"acceptedUsers",[y],Object.getOwnPropertyDescriptor(b.prototype,"acceptedUsers"),b.prototype),g(b.prototype,"remainingNotAcceptedUsers",[_],Object.getOwnPropertyDescriptor(b.prototype,"remainingNotAcceptedUsers"),b.prototype),g(b.prototype,"notAcceptedUsers",[f],Object.getOwnPropertyDescriptor(b.prototype,"notAcceptedUsers"),b.prototype),g(b.prototype,"canManagePolicy",[m],Object.getOwnPropertyDescriptor(b.prototype,"canManagePolicy"),b.prototype),g(b.prototype,"revokePolicy",[o.action],Object.getOwnPropertyDescriptor(b.prototype,"revokePolicy"),b.prototype),g(b.prototype,"acceptPolicy",[o.action],Object.getOwnPropertyDescriptor(b.prototype,"acceptPolicy"),b.prototype),g(b.prototype,"loadRemainingAcceptedUsers",[o.action],Object.getOwnPropertyDescriptor(b.prototype,"loadRemainingAcceptedUsers"),b.prototype),g(b.prototype,"loadRemainingNotAcceptedUsers",[o.action],Object.getOwnPropertyDescriptor(b.prototype,"loadRemainingNotAcceptedUsers"),b.prototype),g(b.prototype,"editPolicy",[o.action],Object.getOwnPropertyDescriptor(b.prototype,"editPolicy"),b.prototype),g(b.prototype,"toggleShowUsers",[o.action],Object.getOwnPropertyDescriptor(b.prototype,"toggleShowUsers"),b.prototype),b)
e.default=h})),define("discourse/plugins/discourse-policy/discourse/connectors/user-preferences-emails-pref-email-settings/preferences-policy-emails",["exports","I18n"],(function(e,t){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var o={setupComponent(e,o){const i=[{name:t.default.t("discourse_policy.preferences.policy_emails.email_frequency_options.never"),value:"never"},{name:t.default.t("discourse_policy.preferences.policy_emails.email_frequency_options.when_away"),value:"when_away"},{name:t.default.t("discourse_policy.preferences.policy_emails.email_frequency_options.always"),value:"always"}]
o.set("policyEmailFrequencyOptions",i)}}
e.default=o})),define("discourse/plugins/discourse-policy/discourse/controllers/policy-builder",["exports","@ember/utils","I18n","discourse/lib/text","discourse/mixins/modal-functionality","@ember/controller","@ember/object","discourse-common/lib/get-url","discourse/lib/ajax"],(function(e,t,o,i,c,n,s,r,l){"use strict"
var p
function a(e,t,o,i,c){var n={}
return Object.keys(i).forEach((function(e){n[e]=i[e]})),n.enumerable=!!n.enumerable,n.configurable=!!n.configurable,("value"in n||n.initializer)&&(n.writable=!0),n=o.slice().reverse().reduce((function(o,i){return i(e,t,o)||o}),n),c&&void 0!==n.initializer&&(n.value=n.initializer?n.initializer.call(c):void 0,n.initializer=void 0),void 0===n.initializer&&(Object.defineProperty(e,t,n),n=null),n}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var u=n.default.extend(c.default,(a(p={toolbarEvent:null,post:null,isSaving:!1,insertMode:!0,onShow(){this.policy||this.set("policy",s.default.create({reminder:"daily",version:1}))},onClose(){this.set("policy",null)},onChangeFormField(e,t){var o
null===(o=this.policy)||void 0===o||o.set(e,t)},insertPolicy(){if(!this._validateForm(this.policy))return
const e=this._buildParams(this.policy)
this.toolbarEvent.addText("\n\n[policy ".concat(e.join(" "),"]\n[/policy]\n\n")),this.send("closeModal")},updatePolicy(){if(!this._validateForm(this.policy))return
this.set("isSaving",!0)
const e=(0,r.default)("/posts/".concat(this.post.id))
return(0,l.ajax)(e,{type:"GET",cache:!1}).then((e=>{const t=e.raw,c=this._replaceRaw(this.policy,t)
if(c){const e={raw:c,edit_reason:o.default.t("discourse_policy.edit_reason")}
return i.default.cookAsync(t).then((t=>{e.cooked=t.string,this.post.save(e)}))}})).finally((()=>{this.set("isSaving",!1),this.send("closeModal")}))},_buildParams(e){const o=[]
return Object.keys(e).forEach((i=>{const c=e[i]
c&&(0,t.isPresent)(c)&&o.push("".concat(i,'="').concat(c,'"'))})),o},_replaceRaw(e,t){const o=new RegExp("\\[policy\\s(.*?)\\]","m"),i=t.match(o)
if(i&&i[1]){const i=this._buildParams(e)
return t.replace(o,"[policy ".concat(i.join(" "),"]"))}return!1},_validateForm(e){return e.groups&&(0,t.isPresent)(e.groups)?!(!e.version||!(0,t.isPresent)(e.version))||(this.flash(o.default.t("discourse_policy.builder.errors.version"),"error"),!1):(this.flash(o.default.t("discourse_policy.builder.errors.group"),"error"),!1)}},"onChangeFormField",[s.action],Object.getOwnPropertyDescriptor(p,"onChangeFormField"),p),a(p,"insertPolicy",[s.action],Object.getOwnPropertyDescriptor(p,"insertPolicy"),p),a(p,"updatePolicy",[s.action],Object.getOwnPropertyDescriptor(p,"updatePolicy"),p),p))
e.default=u})),define("discourse/plugins/discourse-policy/discourse/templates/components/policy-builder-form",["exports","@ember/template-factory"],(function(e,t){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var o=(0,t.createTemplateFactory)({id:"fkDeMCY5",block:'[[[6,[39,0],null,[["name","required"],["groups",true]],[["default"],[[[[1,"  "],[1,[28,[35,1],null,[["groups","onChangeGroup"],[[33,2,["groups"]],[28,[37,3],[[30,0],[30,0,["onChange"]],"groups"],null]]]]],[1,"\\n"]],[]]]]],[1,"\\n"],[6,[39,0],null,[["name","required"],["version",true]],[["default"],[[[[1,"  "],[1,[28,[35,4],null,[["name","type","value","input"],["version","number",[28,[37,5],[[33,2,["version"]]],null],[28,[37,3],[[30,0],[28,[37,6],[[30,0,["onChange"]],"version"],null]],[["value"],["target.value"]]]]]]],[1,"\\n"]],[]]]]],[1,"\\n"],[6,[39,0],null,[["name"],["renew"]],[["default"],[[[[1,"  "],[1,[28,[35,4],null,[["name","type","value","input"],["renew","number",[28,[37,5],[[33,2,["renew"]]],null],[28,[37,3],[[30,0],[28,[37,6],[[30,0,["onChange"]],"renew"],null]],[["value"],["target.value"]]]]]]],[1,"\\n"]],[]]]]],[1,"\\n"],[6,[39,0],null,[["name"],["renew-start"]],[["default"],[[[[1,"  "],[1,[28,[35,4],null,[["type","placeholder","name","value","input"],["date","2020-03-31","renew-start",[28,[37,5],[[28,[37,7],[[33,2],"renew-start"],null]],null],[28,[37,3],[[30,0],[28,[37,6],[[30,0,["onChange"]],"renew-start"],null]],[["value"],["target.value"]]]]]]],[1,"\\n"]],[]]]]],[1,"\\n"],[6,[39,0],null,[["name"],["reminder"]],[["default"],[[[[1,"  "],[1,[28,[35,8],null,[["reminder","onChangeReminder"],[[33,2,["reminder"]],[28,[37,3],[[30,0],[30,0,["onChange"]],"reminder"],null]]]]],[1,"\\n"]],[]]]]],[1,"\\n"],[6,[39,0],null,[["name"],["accept"]],[["default"],[[[[1,"  "],[1,[28,[35,4],null,[["type","name","value","input"],["text","accept",[28,[37,5],[[33,2,["accept"]]],null],[28,[37,3],[[30,0],[28,[37,6],[[30,0,["onChange"]],"accept"],null]],[["value"],["target.value"]]]]]]],[1,"\\n"]],[]]]]],[1,"\\n"],[6,[39,0],null,[["name"],["revoke"]],[["default"],[[[[1,"  "],[1,[28,[35,4],null,[["type","name","value","input"],["text","revoke",[28,[37,5],[[33,2,["revoke"]]],null],[28,[37,3],[[30,0],[28,[37,6],[[30,0,["onChange"]],"revoke"],null]],[["value"],["target.value"]]]]]]],[1,"\\n"]],[]]]]],[1,"\\n"],[6,[39,0],null,[["name"],["private"]],[["default"],[[[[1,"  "],[1,[28,[35,4],null,[["type","name","checked","click"],["checkbox","private",[28,[37,5],[[33,2,["private"]]],null],[28,[37,3],[[30,0],[28,[37,6],[[30,0,["onChange"]],"private"],null]],[["value"],["target.checked"]]]]]]],[1,"\\n"]],[]]]]]],[],false,["policy-form-field","policy-group-input","policy","action","input","readonly","fn","get","policy-reminder-input"]]',moduleName:"discourse/plugins/discourse-policy/discourse/templates/components/policy-builder-form.hbs",isStrictMode:!1})
e.default=o})),define("discourse/plugins/discourse-policy/discourse/templates/components/policy-form-field",["exports","@ember/template-factory"],(function(e,t){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var o=(0,t.createTemplateFactory)({id:"rD9FnzfM",block:'[[[10,0],[15,0,[29,["policy-field ",[36,0]]]],[12],[1,"\\n  "],[10,0],[14,0,"policy-field-label"],[12],[1,"\\n    "],[10,1],[14,0,"label"],[12],[1,"\\n      "],[1,[28,[35,1],[[28,[37,2],["discourse_policy.builder.",[33,0],".label"],null]],null]],[1,"\\n"],[41,[33,4],[[[1,"        "],[10,1],[14,0,"required-field"],[12],[1,"*"],[13],[1,"\\n"]],[]],null],[1,"    "],[13],[1,"\\n  "],[13],[1,"\\n  "],[10,0],[14,0,"policy-field-control"],[12],[1,"\\n    "],[18,1,null],[1,"\\n  "],[13],[1,"\\n  "],[10,1],[14,0,"policy-field-description"],[12],[1,"\\n    "],[10,1],[14,0,"description"],[12],[1,"\\n      "],[1,[28,[35,1],[[28,[37,2],["discourse_policy.builder.",[33,0],".description"],null]],null]],[1,"\\n    "],[13],[1,"\\n  "],[13],[1,"\\n"],[13],[1,"\\n"]],["&default"],false,["name","i18n","concat","if","required","yield"]]',moduleName:"discourse/plugins/discourse-policy/discourse/templates/components/policy-form-field.hbs",isStrictMode:!1})
e.default=o})),define("discourse/plugins/discourse-policy/discourse/templates/components/policy-group-input",["exports","@ember/template-factory"],(function(e,t){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var o=(0,t.createTemplateFactory)({id:"tWVOMvun",block:'[[[1,[28,[35,0],null,[["content","valueProperty","nameProperty","value","onChange"],[[33,1],null,null,[33,2],[28,[37,3],[[30,0],"onChange"],null]]]]],[1,"\\n"]],[],false,["group-chooser","availableGroups","selectedGroups","action"]]',moduleName:"discourse/plugins/discourse-policy/discourse/templates/components/policy-group-input.hbs",isStrictMode:!1})
e.default=o})),define("discourse/plugins/discourse-policy/discourse/templates/components/policy-reminder-input",["exports","@ember/template-factory"],(function(e,t){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var o=(0,t.createTemplateFactory)({id:"hVDBBkGd",block:'[[[1,[28,[35,0],null,[["value","content","onChange"],[[33,1],[33,2],[33,3]]]]],[1,"\\n"]],[],false,["combo-box","reminder","validReminders","onChangeReminder"]]',moduleName:"discourse/plugins/discourse-policy/discourse/templates/components/policy-reminder-input.hbs",isStrictMode:!1})
e.default=o})),define("discourse/plugins/discourse-policy/discourse/templates/components/post-policy",["exports","@ember/template-factory"],(function(e,t){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var o=(0,t.createTemplateFactory)({id:"AL0PmAsZ",block:'[[[41,[33,1],[[[1,"  "],[10,0],[14,0,"policy-footer"],[12],[1,"\\n    "],[10,0],[14,0,"policy-actions"],[12],[1,"\\n"],[41,[33,1,["policy_can_accept"]],[[[1,"        "],[1,[28,[35,2],null,[["isLoading","action","class","translatedLabel","icon"],[[33,3],[28,[37,4],[[30,0],"acceptPolicy"],null],[33,5],[33,6,["accept"]],[52,[33,1,["policy_accepted"]],"check"]]]]],[1,"\\n"]],[]],null],[1,"\\n"],[41,[33,1,["policy_can_revoke"]],[[[1,"        "],[1,[28,[35,2],null,[["isLoading","action","class","translatedLabel","icon"],[[33,3],[28,[37,4],[[30,0],"revokePolicy"],null],[33,7],[33,6,["revoke"]],[52,[33,1,["policy_revoked"]],"check"]]]]],[1,"\\n"]],[]],null],[1,"    "],[13],[1,"\\n    "],[10,0],[14,0,"user-lists"],[12],[1,"\\n"],[41,[51,[33,9]],[[[1,"        "],[10,1],[14,0,"no-possible-users"],[12],[1,"\\n          "],[1,[28,[35,10],["discourse_policy.no_possible_users"],null]],[1,"\\n        "],[13],[1,"\\n"]],[]],null],[1,"\\n"],[41,[33,1,["policy_accepted_by_count"]],[[[1,"        "],[11,3],[24,6,""],[24,0,"toggle toggle-accepted"],[16,"title",[28,[37,10],["discourse_policy.accepted_tooltip"],null]],[4,[38,4],[[30,0],"toggleShowUsers"],null],[12],[1,"\\n          "],[10,1],[14,0,"user-count"],[12],[1,"\\n            "],[1,[33,1,["policy_accepted_by_count"]]],[1,"\\n          "],[13],[1,"\\n          "],[1,[28,[35,11],["user-check"],null]],[1,"\\n        "],[13],[1,"\\n\\n"],[41,[51,[33,12]],[[[41,[33,13,["length"]],[[[1,"            "],[10,0],[14,0,"users accepted"],[12],[1,"\\n"],[42,[28,[37,15],[[28,[37,15],[[33,13]],null]],null],null,[[[1,"                "],[1,[28,[35,16],[[30,1]],[["imageSize"],["tiny"]]]],[1,"\\n"]],[1]],null],[1,"\\n"],[41,[33,17],[[[1,"                "],[11,3],[24,6,""],[24,0,"load-more-users"],[4,[38,4],[[30,0],"loadRemainingAcceptedUsers"],null],[12],[1,"\\n                  +\\n                  "],[1,[34,17]],[1,"\\n                  "],[1,[28,[35,11],["user"],null]],[1,"\\n                "],[13],[1,"\\n"]],[]],null],[1,"            "],[13],[1,"\\n"]],[]],null]],[]],null]],[]],null],[1,"\\n"],[41,[33,1,["policy_not_accepted_by_count"]],[[[1,"        "],[10,0],[14,0,"seperator"],[12],[13],[1,"\\n\\n        "],[11,3],[24,6,""],[24,0,"toggle toggle-not-accepted"],[16,"title",[28,[37,10],["discourse_policy.not_accepted_tooltip"],null]],[4,[38,4],[[30,0],"toggleShowUsers"],null],[12],[1,"\\n          "],[10,1],[14,0,"user-count"],[12],[1,"\\n            "],[1,[33,1,["policy_not_accepted_by_count"]]],[1,"\\n          "],[13],[1,"\\n          "],[1,[28,[35,11],["user-times"],null]],[1,"\\n        "],[13],[1,"\\n\\n"],[41,[33,12],[[[1,"          "],[10,0],[14,0,"users not-accepted"],[12],[1,"\\n"],[42,[28,[37,15],[[28,[37,15],[[33,18]],null]],null],null,[[[1,"              "],[1,[28,[35,16],[[30,2]],[["imageSize"],["tiny"]]]],[1,"\\n"]],[2]],null],[1,"\\n"],[41,[33,19],[[[1,"              "],[11,3],[24,6,""],[24,0,"load-more-users"],[4,[38,4],[[30,0],"loadRemainingNotAcceptedUsers"],null],[12],[1,"\\n                +\\n                "],[1,[34,19]],[1,"\\n                "],[1,[28,[35,11],["user"],null]],[1,"\\n              "],[13],[1,"\\n"]],[]],null],[1,"          "],[13],[1,"\\n"]],[]],null]],[]],null],[1,"    "],[13],[1,"\\n\\n"],[41,[33,20],[[[1,"      "],[1,[28,[35,2],null,[["class","icon","action"],["no-text btn-default edit-policy-settings-btn","cog",[28,[37,4],[[30,0],"editPolicy"],null]]]]],[1,"\\n"]],[]],null],[1,"  "],[13],[1,"\\n"]],[]],null]],["acceptedUser","notAcceptedUser"],false,["if","post","d-button","isLoading","action","acceptButtonClasses","policy","revokeButtonClasses","unless","policyHasUsers","i18n","d-icon","showNotAccepted","acceptedUsers","each","-track-array","avatar","remainingAcceptedUsers","notAcceptedUsers","remainingNotAcceptedUsers","canManagePolicy"]]',moduleName:"discourse/plugins/discourse-policy/discourse/templates/components/post-policy.hbs",isStrictMode:!1})
e.default=o})),define("discourse/plugins/discourse-policy/discourse/templates/connectors/user-preferences-emails-pref-email-settings/preferences-policy-emails",["exports","@ember/template-factory"],(function(e,t){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var o=(0,t.createTemplateFactory)({id:"hKsfnT/0",block:'[[[10,"h3"],[12],[1,[28,[35,0],["discourse_policy.preferences.title"],null]],[13],[1,"\\n"],[10,0],[14,0,"control-group policy-setting controls-dropdown"],[12],[1,"\\n  "],[10,"label"],[14,"for","user_policy_email_frequency"],[12],[1,"\\n    "],[1,[28,[35,0],["discourse_policy.preferences.policy_emails.label"],null]],[1,"\\n  "],[13],[1,"\\n  "],[1,[28,[35,1],null,[["valueProperty","content","value","id","onChange"],["value",[33,2],[33,3,["user_option","policy_email_frequency"]],"user_policy_email_frequency",[28,[37,4],[[30,0],[28,[37,5],[[33,3,["user_option","policy_email_frequency"]]],null]],null]]]]],[1,"\\n"],[41,[28,[37,7],[[33,3,["user_option","policy_email_frequency"]],"always"],null],[[[1,"    "],[10,0],[14,0,"control-instructions"],[12],[1,"\\n      "],[1,[28,[35,0],["discourse_policy.preferences.policy_emails.always_description"],null]],[1,"\\n    "],[13],[1,"\\n"]],[]],[[[41,[28,[37,7],[[33,3,["user_option","policy_email_frequency"]],"when_away"],null],[[[1,"    "],[10,0],[14,0,"control-instructions"],[12],[1,"\\n      "],[1,[28,[35,0],["discourse_policy.preferences.policy_emails.away_description"],null]],[1,"\\n    "],[13],[1,"\\n  "]],[]],null]],[]]],[13],[1,"\\n"]],[],false,["i18n","combo-box","policyEmailFrequencyOptions","model","action","mut","if","eq"]]',moduleName:"discourse/plugins/discourse-policy/discourse/templates/connectors/user-preferences-emails-pref-email-settings/preferences-policy-emails.hbs",isStrictMode:!1})
e.default=o})),define("discourse/plugins/discourse-policy/discourse/templates/modal/policy-builder",["exports","@ember/template-factory"],(function(e,t){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var o=(0,t.createTemplateFactory)({id:"qSXr1GuZ",block:'[[[6,[39,0],null,[["title","class"],[[28,[37,1],["discourse_policy.builder.title"],null],"policy-builder"]],[["default"],[[[[1,"  "],[1,[28,[35,2],null,[["policy","onChange"],[[33,3],[28,[37,4],[[30,0],"onChangeFormField"],null]]]]],[1,"\\n"]],[]]]]],[1,"\\n"],[10,0],[14,0,"modal-footer"],[12],[1,"\\n"],[41,[33,6],[[[1,"    "],[1,[28,[35,7],null,[["type","class","label","action"],["button","btn-primary","discourse_policy.builder.insert",[28,[37,4],[[30,0],"insertPolicy"],null]]]]],[1,"\\n"]],[]],[[[1,"    "],[1,[28,[35,7],null,[["isLoading","type","class","label","action"],[[33,8],"button","btn-primary","discourse_policy.builder.save",[28,[37,4],[[30,0],"updatePolicy"],null]]]]],[1,"\\n"]],[]]],[13],[1,"\\n"]],[],false,["d-modal-body","concat","policy-builder-form","policy","action","if","insertMode","d-button","isSaving"]]',moduleName:"discourse/plugins/discourse-policy/discourse/templates/modal/policy-builder.hbs",isStrictMode:!1})
e.default=o})),define("discourse/plugins/discourse-policy/initializers/add-policy-builder",["exports","discourse/lib/plugin-api","discourse/lib/show-modal"],(function(e,t,o){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var i={name:"add-discourse-policy-builder",initialize(e){e.lookup("site-settings:main").policy_enabled&&(0,t.withPluginApi)("0.8.7",(t=>function(e,t){const i=e.getCurrentUser(),c=t.lookup("site-settings:main")
e.addToolbarPopupMenuOptionsCallback((()=>{if(i)return!c.policy_restrict_to_staff_posts||i.staff?{label:"discourse_policy.builder.attach",id:"insertPolicy",group:"insertions",icon:"file-signature",action:"insertPolicy"}:void 0})),e.modifyClass("controller:composer",{pluginId:"discourse-policy",actions:{insertPolicy(){(0,o.default)("policy-builder").setProperties({insertMode:!0,post:null,toolbarEvent:this.toolbarEvent})}}})}(t,e)))}}
e.default=i})),define("discourse/plugins/discourse-policy/initializers/extend-for-policy",["exports","@ember/object","I18n","discourse/lib/plugin-api","discourse/lib/utilities"],(function(e,t,o,i,c){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
const n=[{name:"groups"},{name:"version"},{name:"renew"},{name:"renew-start",camelName:"renewStart"},{name:"reminder"},{name:"accept",default:o.default.t("discourse_policy.accept_policy"),escape:!0},{name:"revoke",default:o.default.t("discourse_policy.revoke_policy"),escape:!0}]
function s(e){function i(e){const o={}
return n.forEach((t=>{o[t.name]=e.dataset[t.camelName||t.name]||t.default||"",t.escape&&(o[t.name]=(0,c.escapeExpression)(o[t.name]))})),(!o.version||parseInt(o.version,10)<1)&&(o.version=1),o.private="true"===e.dataset.private,t.default.create(o)}e.decorateCookedElement((function(t,c){const n=t.querySelector(".policy")
if(!n)return
if(n.innerHTML='<div class="policy-body">'.concat(n.innerHTML,"</div>"),!c){const e=document.createElement("div")
return e.classList.add("policy-preview"),e.innerText=o.default.t("discourse_policy.title"),void n.prepend(e)}const s=c.getModel(),r=e.container.owner.factoryFor("component:post-policy").create({post:s,policy:i(n)})
r.renderer.appendTo(r,n)}),{onlyStream:!1,id:"discourse-policy"}),e.registerCustomPostMessageCallback("policy_change",((e,t)=>{e.appEvents.trigger("policy:changed",{controller:e,message:t})}))}var r={name:"extend-for-policy",initialize(){(0,i.withPluginApi)("0.8.7",s)}}
e.default=r})),define("discourse/plugins/discourse-policy/lib/discourse-markdown/policy",["exports"],(function(e){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.setup=function(e){e.allowList(["div.policy"]),e.registerOptions(((e,t)=>{e.features.policy=!!t.policy_enabled})),e.registerPlugin((e=>{e.block.bbcode.ruler.push("policy",t)}))}
const t={tag:"policy",wrap:function(e,t){return!(!t.attrs.group&&!t.attrs.groups)&&(e.attrs=[["class","policy"]],t.attrs.group&&e.attrs.push(["data-group",t.attrs.group]),t.attrs.groups&&e.attrs.push(["data-groups",t.attrs.groups]),e.attrs.push(["data-version",t.attrs.version||1]),t.attrs.renew&&e.attrs.push(["data-renew",t.attrs.renew]),t.attrs.reminder&&e.attrs.push(["data-reminder",t.attrs.reminder]),t.attrs.accept&&e.attrs.push(["data-accept",t.attrs.accept]),t.attrs.revoke&&e.attrs.push(["data-revoke",t.attrs.revoke]),t.attrs.start&&e.attrs.push(["data-renew-start",t.attrs.start]),t.attrs.private&&e.attrs.push(["data-private",t.attrs.private]),!0)}}})),define("discourse/plugins/discourse-policy/pre-initializers/define-policy-templates",["exports"],(function(e){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t={name:"define-policy-templates",after:"inject-discourse-objects",initialize(){const e="javascripts/components/post-policy"
define(e,(()=>Ember.TEMPLATES[e]))}}
e.default=t})),define("discourse/plugins/discourse-policy/pre-initializers/policy-user-options",["exports","discourse/controllers/preferences/emails","discourse/lib/plugin-api"],(function(e,t,o){"use strict"
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
const i="policy_email_frequency"
var c={name:"policy-user-options",initialize(e){(0,o.withPluginApi)("0.8.7",(t=>{e.lookup("site-settings:main").policy_enabled&&t.addSaveableUserOptionField(i)})),t.default.reopen({init(){this._super(...arguments),this.saveAttrNames.push(i)}})}}
e.default=c}))

//# sourceMappingURL=discourse-policy-4c6e9b7072d182e181eed640ffee729cca91047375848c366f2baf8e30491f53.map
//!

;
